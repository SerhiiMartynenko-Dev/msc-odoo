<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <data noupdate="0">


        <record id="action_move_barcode_to_internal_code" model="ir.actions.server">
            <field name="name">MSC: Move barcode to internal code</field>
            <field name="model_id" ref="product.model_product_product"/>
            <field name="state">code</field>
            <field name="code">
products = model.with_context(active_test=False, set_barcode=True).search([])
for product in products:
    description = (product.description or '').strip()
    if description:
        description += '\n'
    description += (product.default_code or '')

    product.write({
        'barcode': product._create_barcode(),
        'default_code': product.barcode,
        'description': description,
    })
            </field>
        </record>

        <record id="action_move_barcode_to_internal_code_todo" model="ir.actions.todo">
            <field name="name">MSC: Move barcode to internal code</field>
            <field name="sequence">0</field>
            <field name="action_id" ref="action_move_barcode_to_internal_code"/>
        </record>






<!--        <record id="action_fix_margin" model="ir.actions.server">-->
<!--            <field name="name">MSC: Fix Margin</field>-->
<!--            <field name="model_id" ref="sale.model_sale_order"/>-->
<!--            <field name="state">code</field>-->
<!--            <field name="code">-->
<!--orders = model.with_context(active_test=False).search([])-->
<!--for order in orders:-->
<!--    order.order_line._compute_purchase_price()-->
<!--    order.order_line._compute_margin()-->
<!--    order._compute_margin()-->
<!--            </field>-->
<!--        </record>-->

<!--        <record id="action_fix_margin_todo" model="ir.actions.todo">-->
<!--            <field name="name">MSC: Fix Margin</field>-->
<!--            <field name="sequence">0</field>-->
<!--            <field name="action_id" ref="action_fix_margin"/>-->
<!--        </record>-->

    </data>


</odoo>